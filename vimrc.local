" Stop mapping \ to :Ag
unmap \
colorscheme torte

set history=100 " Default history is only 20
set undolevels=100 " Use more levels of undo

set autoindent " always set autoindenting on
set copyindent " copy the previous indentation on autoindenting

" Search Settings
set ignorecase  " case insensitive search
set smartcase   " If a capital letter is included in search, make it case-sensitive
set hlsearch  " highlight search results

set ruler " ruler on
set nu " Line numbers on
set noerrorbells  " don't beep
set vb t_vb= " stops the beeping
set colorcolumn=0
set wrap "soft wrap at edge of window
set linebreak " done linebreak in the middle of a word
"set formatoptions-=t " don't do automatic line breaks

"map ctrl-space to no-op b/c i use it with tmux
imap <Nul> <Nop>
map  <Nul> <Nop>
vmap <Nul> <Nop>
cmap <Nul> <Nop>
nmap <Nul> <Nop>

" Mappings to access buffers (don't use "\p" because a
" delay before pressing "p" would accidentally paste).
" \l       : list buffers
" \b \f \g : go back/forward/last-used
" \1 \2 \3 : go to buffer 1/2/3 etc
nnoremap \l :ls<CR>
nnoremap \b :bp<CR>
nnoremap \f :bn<CR>
nnoremap \g :e#<CR>
nnoremap \1 :1b<CR>
nnoremap \2 :2b<CR>
nnoremap \3 :3b<CR>
nnoremap \4 :4b<CR>
nnoremap \5 :5b<CR>
nnoremap \6 :6b<CR>
nnoremap \7 :7b<CR>
nnoremap \8 :8b<CR>
nnoremap \9 :9b<CR>
nnoremap \0 :10b<CR>
" It's useful to show the buffer number in the status line.
set laststatus=2 statusline=%02n:%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P

" tab completion for filenames
set wildmode=longest,list,full
set wildmenu

" mapping for fuzzy file search
nnoremap <Leader>f :Files<CR>
nnoremap <Leader>b :Buffers<CR>

" Setup for running tests in a tmux pane
" you have to select window: 1; pane: 2 (with the tmux setup)
let test#strategy = "tslime"
let g:test#preserve_screen = 1
nnoremap <Leader>a :TestSuite PGGSSENCMODE=disable<CR>
nnoremap <Leader>t :TestFile PGGSSENCMODE=disable<CR>
nnoremap <Leader>n :TestNearest PGGSSENCMODE=disable<CR>
nnoremap <Leader>l :TestLast PGGSSENCMODE=disable<CR>

" send yank to clipboard
set clipboard=unnamed

" keep tslime from asking which session and window
let g:tslime_always_current_session = 1
let g:tslime_always_current_window = 1

" autofix rubocop
nnoremap <Leader>rc :ALEFix<CR>
let g:ale_linter_aliases = {'vue': ['vue', 'javascript']}
let g:ale_linters = {'vue': ['eslint', 'vls']}
let g:ale_fixers = {
      \   'ruby': ['rubocop'],
      \   'javascript': ['eslint'],
      \   'vue': ['eslint']
      \}
let g:ale_enabled = 1
let g:ale_ruby_rubocop_executable = 'bundle'

" keep syntax highlighting from flickering on vue files
" https://github.com/posva/vim-vue#my-syntax-highlighting-stops-working-randomly
autocmd FileType vue syntax sync fromstart

" allow moving to another buffer when current buffer is unsaved
set hidden

" set search matches to yellow (current match is red/orange)
highlight Search ctermbg=DarkYellow ctermfg=0

" turn off spell checking
set nospell

" use ag via fzf to ignore files in .gitignore
let $FZF_DEFAULT_COMMAND = 'ag -g ""'

" toggle NERDTree on / off
nnoremap <Leader>nt :NERDTreeToggle<CR>
" make NERDTree jump to the location of the open buffer
nnoremap <Leader>r :NERDTreeFind<CR>

" Run Hyrax specs in the container.
function! HyraxRspec(cmd) abort
  call system("cat README.md | grep 'Hyrax'")
  if v:shell_error == 0
    return substitute(a:cmd, 'bundle exec \(.*\)', 'docker-compose exec -w /app/samvera/hyrax-engine app sh -c "bundle exec \1"', '')
  else
    return a:cmd
  endif
endfunction

let g:test#custom_transformations = {
      \ 'hyrax_ruby': function('HyraxRspec')
      \ }
let g:test#transformation = 'hyrax_ruby'

let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_no_default_key_mappings = 1
let g:vim_markdown_conceal = 0
let g:vim_markdown_conceal_code_blocks = 0
